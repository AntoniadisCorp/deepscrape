# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install Dependencies
        run: npm ci
      - name: Install Angular CLI Globally
        run: npm install -g @angular/cli
      # Debugging step to check environment variables
      - name: Debug Environment Variables
        run: |
          echo "API_KEY=$API_KEY"
          echo "AUTH_DOMAIN=$AUTH_DOMAIN"
          echo "DATABASE_URL=$DATABASE_URL"
          echo "PROJECT_ID=$PROJECT_ID"
          echo "STORAGE_BUCKET=$STORAGE_BUCKET"
          echo "MESSAGING_SENDER_ID=$MESSAGING_SENDER_ID"
          echo "APP_ID=$APP_ID"
          echo "RECAPTCHA_KEY=$RECAPTCHA_KEY"
          echo "ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY"
          echo "CRAWL4AI_API_KEY=$CRAWL4AI_API_KEY"
          echo "OPENAI_API_KEY=$OPENAI_API_KEY"
          echo "GROQ_API_KEY=$GROQ_API_KEY"
          echo "JINAAI_API_KEY=$JINAAI_API_KEY"
        env:
          API_KEY: ${{ secrets.API_KEY }}
          AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          APP_ID: ${{ secrets.APP_ID }}
          RECAPTCHA_KEY: ${{ secrets.RECAPTCHA_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CRAWL4AI_API_KEY: ${{ secrets.CRAWL4AI_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          JINAAI_API_KEY: ${{ secrets.JINAAI_API_KEY }}
      - name: Build Angular App
        env:
          API_KEY: ${{ secrets.API_KEY }}
          AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          APP_ID: ${{ secrets.APP_ID }}
          RECAPTCHA_KEY: ${{ secrets.RECAPTCHA_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          CRAWL4AI_API_KEY: ${{ secrets.CRAWL4AI_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          JINAAI_API_KEY: ${{ secrets.JINAAI_API_KEY }}
        run: npm run staging
      - name: Install Functions Dependencies
        working-directory: ./functions
        run: npm ci
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: libnet-d76db
          channelId: pr-${{ github.event.pull_request.number }}
          entryPoint: "./functions"
          expires: 30d
        env:
          PRODUCTION: true
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          JINAAI_API_KEY: ${{ secrets.JINAAI_API_KEY }}
          STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
          UPSTASH_REDIS_REST_PASSWORD: ${{ secrets.UPSTASH_REDIS_REST_PASSWORD }}
          UPSTASH_REDIS_REST_USER: ${{ secrets.UPSTASH_REDIS_REST_USER }}
          API_CRAWL4AI_URL: "https://deepcrawl4ai.fly.dev"
          GOOGLE_GENAI_API_KEY: ${{ secrets.GOOGLE_GENAI_API_KEY }}
